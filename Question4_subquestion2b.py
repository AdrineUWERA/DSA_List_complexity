from memory_profiler import memory_usage  # Module to help us track the memory space used by the function
import random  # Module to allow us to generate random characters
import string  # Module to help us access ASCII lowercase and uppercase constants when generating random strings
import matplotlib.pyplot as plt  # help us to plot the graph


# Function to convert a string to lower case
def convert_to_lowercase(my_string):
    string_list = list(my_string)  # Converts the string into a list of characters
    return_string = ""  # initialize string to be returned by the function
    for letter in string_list:  # iterates through every character of the string
        return_string += letter.lower()  # append each character after turning it into lower case

    return return_string  # returns the original string but now in lower case


size_array = []  # contains the sizes of all strings that will be generated by the program
memory_usage_array = []  # contains memory used by the function on different input size

# Iterates through the numbers from 1 to 100 and increment by 20 after each iteration to determine the string sizes
for string_size in range(1, 100, 20):
    # initializing all the ASCII uppercase constants to a variable
    letters = string.ascii_uppercase
    # Generating a random uppercase characters to form a string of size (string_size) ie. the value of the index in the outer loop
    mystring = ''.join(random.choices(letters, k=string_size))
    # Calling the function to convert to lower case and passing the randomly generated string
    print(f"Lowercase string: {convert_to_lowercase(mystring)}")
    # appending the size of the string under iteration to the size_array
    size_array.append(string_size)
    # Tracking the memory used by the program for the string size under iteration
    mem_usage = memory_usage(-1, interval=.2, timeout=1)
    # adding the calculated memory usage corresponding to the string size under iteration in the array
    memory_usage_array.append(mem_usage[-1])
    print(mem_usage)


# plotting the memory usage against input size
plt.plot(size_array, memory_usage_array)

# naming the x axis
plt.xlabel('Input size')
# naming the y axis
plt.ylabel('Memory usage')

# giving a title to my graph
plt.title('Graph')

# function to show the plot
plt.show()
